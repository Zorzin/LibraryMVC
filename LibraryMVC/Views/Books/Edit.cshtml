@using LibraryMVC.Resources
@model LibraryMVC.Models.BookEditViewModel

@{
    ViewBag.Title = @Language_Books.EditingBook;
}

<h2>@ViewBag.Title:</h2>


@using (Html.BeginForm("Edit","Books",FormMethod.Post, new
{
    @enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookViewModel.BookID)

        <div class="form-group">
            @Html.Label(Language_Books.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookViewModel.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookViewModel.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookViewModel.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookViewModel.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookViewModel.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(Language_Books.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookViewModel.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookViewModel.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(Language_Books.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookViewModel.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookViewModel.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(Language_Books.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookViewModel.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookViewModel.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(Language_Books.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="contentdiv">
                @Html.TextBoxFor(model=>model.OldContent,new {@readonly = "readonly", style = "border-width: 0px" })
                <button type="button" id="chagecontent" >@Language_Books.Remove</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookViewModel.CategoryID, Language_Books.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BookViewModel.CategoryID", ViewBag.CategoryID as SelectList, htmlAttributes: new { @class = "chosen-single-select", style = "width:350px" })
                @Html.ValidationMessageFor(model => model.BookViewModel.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookViewModel.SelectedWriters, Language_Books.Writers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.BookViewModel.SelectedWriters, ViewBag.Writers as SelectList, new { @class = "chosen-group-select", multiple = "multiple", style = "width:350px;", id = "writerchosen" })
                <button type="button" id="writerdialogopener">@Language_Books.Add</button>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BookViewModel.SelectedLabels, Language_Books.Labels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.BookViewModel.SelectedLabels, ViewBag.Labels as SelectList, new { @class = "chosen-group-select", multiple = "multiple", style = "width:350px;", id = "labelchosen" })
                <button type="button" id="labeldialogopener">@Language_Books.Add</button>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model=>model.BookViewModel.Files, Language_Books.Files, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="refreshmain">
                    @for (var i = 0; i < Model.OldFiles.Count; i++)
                    {
                        var spanid = "display" + i;
                        <div id=@spanid class="refresh">
                            @Html.TextBoxFor(model => model.OldFiles [i], new { @readonly = "readonly", id = "oldfiles", style = "border-width: 0px" })
                            @Html.TextBoxFor(model => model.OldFilesText [i], new { id = "oldfilestext" })
                            <button type="button" id=@i class="removefilebutton">@Language_Books.Remove</button>
                        </div>
                    }
                </div>
                <div id="addanotherfilediv">
                    
                </div>
                
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <button id="addanotherfile" type="button">@Language_Books.Add</button>
            </div>
        </div>
        
        <div id="writerdialog" title="@Language_Books.AddNewWriter">
            @Language_Writers.Name: <input type="text" id="writername" />
            @Language_Writers.Surname: <input type="text" id="writersurname" />
            <br />
            <button type="button" id="addwriter">@Language_Books.Add</button>
        </div>

        <div id="labeldialog" title="@Language_Books.AddNewLabel">
            @Language_Labels.Name: <input type="text" id="labelname" />
            <br />
            <button type="button" id="addlabel">@Language_Books.Add</button>
        </div>

        <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value=@Language_Books.Save class="btn btn-success" />
                </div>
            </div>
        </div>

}

<div>
    @Html.ActionLink(Language_Books.BackToList, "Index", null, new { @class = "btn btn-info" })
</div>

@section Scripts {
    <link href="~/Content/chosen.css" rel="stylesheet" />
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="@Url.Content("~/Scripts/chosen.jquery.js")" type="text/javascript"></script>

    <script type="text/javascript">

        var maxid = 0;

        $(document).ready(function () {
            $('.chosen-group-select').chosen();
            $('.chosen-single-select').chosen();
        });

        $('#chagecontent')
            .click(function() {
                $('#contentdiv').empty();
                $('#contentdiv').append("<input type=\"file\" id=\"BookViewModel_Contents\" name=\"BookViewModel.Contents\">");
            });

        $('.removefilebutton')
            .click(function() {
                var id = $(this).attr('id');
                var name = "display" + id;
                $("#" + name).remove();
                refreshId();
            });

        $('#addanotherfile').click(function () {

            $('#addanotherfilediv').append("<div><div style=\"display: inline-flex\"><input type=\"file\" name=\"BookViewModel.Files[" + maxid + "]\">" + "<input type =\"text\" name=\"BookViewModel.FilesNames[" + maxid + "]\"/></div></div>");
            maxid += 1;
        });

        function refreshId() {
            $('.refresh').each(function (i) {
                console.log($(this).find('#oldfiles').attr('name'));
                    $(this).find('#oldfiles').attr('name', "OldFiles[" + i + "]");
                    $(this).find('#oldfilestext').attr('name', "OldFilesText[" + i + "]");
                });
        }

        labeldialog = $("#labeldialog")
        .dialog({
            autoOpen: false,
            show: {
                effect: "blind",
                duration: 10
            },
            hide: {
                duration: 10
            }
        });
        writerdialog = $("#writerdialog")
            .dialog({
                autoOpen: false,
                show: {
                    effect: "blind",
                    duration: 10
                },
                hide: {
                    duration: 10
                }
            });

        $("#writerdialogopener")
                .on("click",
                    function () {
                        $('#writerdialog').dialog('open');
                    });

        $("#labeldialogopener")
                .on("click",
                    function () {
                        $('#labeldialog').dialog('open');
                    });
        $("#addwriter")
               .click(
                   function () {
                       addWriter();
                   });
        $("#addlabel")
            .click(
                function () {
                    addLabel();
                });
        function addWriter() {
            jQuery.get('/Books/AddWriter',
                {
                    name: $('#writername').val(),
                    surname: $('#writersurname').val()
                })
                .done(function (key) {
                    writerdialog.dialog('close');
                    $('#writerchosen').append("<option value='" + key + "'>" + $('#writername').val() + " " + $('#writersurname').val() + "</option>");
                    $(".chosen-group-select").trigger("chosen:updated");
                });
        }

        function addLabel() {
            jQuery.get('/Books/AddLabel',
                {
                    name: $('#labelname').val()
                })
                .done(function (key) {
                    labeldialog.dialog('close');
                    $('#labelchosen').append("<option value='" + key + "'>" + $('#labelname').val() + "</option>");
                    $(".chosen-group-select").trigger("chosen:updated");
                });
        }


    </script>
}